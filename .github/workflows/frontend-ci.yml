name: Frontend CI/CD

on:
  push:
    branches: [dev, main, 'feature/*']
    paths: ['frontend/**']
  pull_request:
    branches: [dev, main]
    paths: ['frontend/**']

env:
  REGISTRY: registry-dev2.k-paas.org
  IMAGE_NAME: kpaas/logout-token-sample-ui

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          # TypeScript 버전 충돌 해결을 위해 package-lock.json 재생성
          rm -f package-lock.json
          npm install

      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --coverage --watchAll=false --passWithNoTests

      - name: Run linter
        working-directory: ./frontend
        run: npm run lint || true  # ESLint 설정이 없으면 무시

      - name: Build application
        working-directory: ./frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Harbor Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Update image tag in dev overlay
        if: github.ref == 'refs/heads/dev'
        run: |
          cd frontend/k8s/overlays/dev
          IMAGE_TAG="dev-$(echo ${{ github.sha }} | cut -c1-7)"
          sed -i "s|newTag:.*|newTag: ${IMAGE_TAG}|" kustomization.yaml
          
          # Commit and push the changes
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add kustomization.yaml
          git commit -m "chore: update frontend image tag to ${IMAGE_TAG}"
          git push